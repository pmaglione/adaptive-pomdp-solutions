# This file is a POMDP policy, represented as a set of "lower bound
# planes", each of which consists of an alpha vector and a corresponding
# action.  Given a particular belief b, this information can be used to
# answer two queries of interest:
#
#   1. What is a lower bound on the expected long-term reward starting
#        from belief b?
#   2. What is an action that achieves that expected reward lower bound?
#
# Each lower bound plane is only defined over a subset of the belief
# simplex--it is defined for those beliefs b such that the non-zero
# entries of b are a subset of the entries present in the plane's alpha
# vector.  If this condition holds we say the plane is 'applicable' to b.
#
# Given a belief b, both of the queries above can be answered by the
# following process: first, throw out all the planes that are not
# applicable to b.  Then, for each of the remaining planes, take the inner
# product of the plane's alpha vector with b.  The highest inner product
# value is the expected long-term reward lower bound, and the action label
# for that plane is the action that achieves the bound.

{
  policyType => "MaxPlanesLowerBound",
  numPlanes => 6,
  planes => [
    {
      action => 1,
      numEntries => 23,
      entries => [
        0, 1,
        1, 1,
        2, 1,
        3, 1,
        4, 1,
        5, 1,
        6, 1,
        7, 1,
        8, 1,
        9, 1,
        10, 1,
        11, -100,
        12, -100,
        13, -100,
        14, -100,
        15, -100,
        16, -100,
        17, -100,
        18, -100,
        19, -100,
        20, -100,
        21, -100,
        22, 0
      ]
    },
    {
      action => 2,
      numEntries => 23,
      entries => [
        0, -100,
        1, -100,
        2, -100,
        3, -100,
        4, -100,
        5, -100,
        6, -100,
        7, -100,
        8, -100,
        9, -100,
        10, -100,
        11, 1,
        12, 1,
        13, 1,
        14, 1,
        15, 1,
        16, 1,
        17, 1,
        18, 1,
        19, 1,
        20, 1,
        21, 1,
        22, 0
      ]
    },
    {
      action => 0,
      numEntries => 20,
      entries => [
        1, -8.56828,
        2, -13.1876,
        3, -17.8651,
        4, -22.6102,
        5, -27.4355,
        6, -32.3589,
        7, -37.4084,
        8, -42.6326,
        9, -48.1381,
        10, -54.495,
        12, -8.56828,
        13, -13.1876,
        14, -17.8651,
        15, -22.6102,
        16, -27.4355,
        17, -32.3589,
        18, -37.4084,
        19, -42.6326,
        20, -48.1381,
        21, -54.495
      ]
    },
    {
      action => 2,
      numEntries => 21,
      entries => [
        1, -100,
        2, -100,
        3, -100,
        4, -100,
        5, -100,
        6, -100,
        7, -100,
        8, -100,
        9, -100,
        10, -100,
        11, 1,
        12, 1,
        13, 1,
        14, 1,
        15, 1,
        16, 1,
        17, 1,
        18, 1,
        19, 1,
        20, 1,
        21, 1
      ]
    },
    {
      action => 1,
      numEntries => 21,
      entries => [
        0, 1,
        1, 1,
        2, 1,
        3, 1,
        4, 1,
        5, 1,
        6, 1,
        7, 1,
        8, 1,
        9, 1,
        10, 1,
        12, -100,
        13, -100,
        14, -100,
        15, -100,
        16, -100,
        17, -100,
        18, -100,
        19, -100,
        20, -100,
        21, -100
      ]
    },
    {
      action => 0,
      numEntries => 23,
      entries => [
        0, -4.0001,
        1, -8.56828,
        2, -13.1876,
        3, -17.8651,
        4, -22.6102,
        5, -27.4355,
        6, -32.3589,
        7, -37.4084,
        8, -42.6326,
        9, -48.1381,
        10, -54.495,
        11, -4.0001,
        12, -8.56828,
        13, -13.1876,
        14, -17.8651,
        15, -22.6102,
        16, -27.4355,
        17, -32.3589,
        18, -37.4084,
        19, -42.6326,
        20, -48.1381,
        21, -54.495,
        22, 0
      ]
    }
  ]
}
