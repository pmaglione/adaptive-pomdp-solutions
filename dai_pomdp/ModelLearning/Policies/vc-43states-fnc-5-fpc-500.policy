# This file is a POMDP policy, represented as a set of "lower bound
# planes", each of which consists of an alpha vector and a corresponding
# action.  Given a particular belief b, this information can be used to
# answer two queries of interest:
#
#   1. What is a lower bound on the expected long-term reward starting
#        from belief b?
#   2. What is an action that achieves that expected reward lower bound?
#
# Each lower bound plane is only defined over a subset of the belief
# simplex--it is defined for those beliefs b such that the non-zero
# entries of b are a subset of the entries present in the plane's alpha
# vector.  If this condition holds we say the plane is 'applicable' to b.
#
# Given a belief b, both of the queries above can be answered by the
# following process: first, throw out all the planes that are not
# applicable to b.  Then, for each of the remaining planes, take the inner
# product of the plane's alpha vector with b.  The highest inner product
# value is the expected long-term reward lower bound, and the action label
# for that plane is the action that achieves the bound.

{
  policyType => "MaxPlanesLowerBound",
  numPlanes => 6,
  planes => [
    {
      action => 2,
      numEntries => 43,
      entries => [
        0, -500,
        1, -500,
        2, -500,
        3, -500,
        4, -500,
        5, -500,
        6, -500,
        7, -500,
        8, -500,
        9, -500,
        10, -500,
        11, -500,
        12, -500,
        13, -500,
        14, -500,
        15, -500,
        16, -500,
        17, -500,
        18, -500,
        19, -500,
        20, -500,
        21, 0,
        22, 0,
        23, 0,
        24, 0,
        25, 0,
        26, 0,
        27, 0,
        28, 0,
        29, 0,
        30, 0,
        31, 0,
        32, 0,
        33, 0,
        34, 0,
        35, 0,
        36, 0,
        37, 0,
        38, 0,
        39, 0,
        40, 0,
        41, 0,
        42, 0
      ]
    },
    {
      action => 2,
      numEntries => 39,
      entries => [
        3, -500,
        4, -500,
        5, -500,
        6, -500,
        7, -500,
        8, -500,
        9, -500,
        10, -500,
        11, -500,
        12, -500,
        13, -500,
        14, -500,
        15, -500,
        16, -500,
        17, -500,
        18, -500,
        19, -500,
        20, -500,
        21, 0,
        22, 0,
        23, 0,
        24, 0,
        25, 0,
        26, 0,
        27, 0,
        28, 0,
        29, 0,
        30, 0,
        31, 0,
        32, 0,
        33, 0,
        34, 0,
        35, 0,
        36, 0,
        37, 0,
        38, 0,
        39, 0,
        40, 0,
        41, 0
      ]
    },
    {
      action => 2,
      numEntries => 40,
      entries => [
        2, -500,
        3, -500,
        4, -500,
        5, -500,
        6, -500,
        7, -500,
        8, -500,
        9, -500,
        10, -500,
        11, -500,
        12, -500,
        13, -500,
        14, -500,
        15, -500,
        16, -500,
        17, -500,
        18, -500,
        19, -500,
        20, -500,
        21, 0,
        22, 0,
        23, 0,
        24, 0,
        25, 0,
        26, 0,
        27, 0,
        28, 0,
        29, 0,
        30, 0,
        31, 0,
        32, 0,
        33, 0,
        34, 0,
        35, 0,
        36, 0,
        37, 0,
        38, 0,
        39, 0,
        40, 0,
        41, 0
      ]
    },
    {
      action => 0,
      numEntries => 41,
      entries => [
        1, -1,
        2, -25.9975,
        3, -38.4963,
        4, -50.995,
        5, -63.4937,
        6, -75.9925,
        7, -88.4913,
        8, -100.99,
        9, -113.489,
        10, -125.987,
        11, -138.486,
        12, -150.985,
        13, -163.484,
        14, -175.983,
        15, -188.481,
        16, -200.98,
        17, -213.479,
        18, -225.977,
        19, -238.476,
        20, -250.975,
        21, -1,
        22, -1.12499,
        23, -1.24998,
        24, -1.37496,
        25, -1.49995,
        26, -1.62494,
        27, -1.74992,
        28, -1.87491,
        29, -1.9999,
        30, -2.12489,
        31, -2.24988,
        32, -2.37486,
        33, -2.49985,
        34, -2.62484,
        35, -2.74982,
        36, -2.87481,
        37, -2.9998,
        38, -3.12479,
        39, -3.24978,
        40, -3.37476,
        41, -3.49975
      ]
    },
    {
      action => 0,
      numEntries => 41,
      entries => [
        1, -1.025,
        2, -2.29975,
        3, -3.88693,
        4, -6.09899,
        5, -8.93593,
        6, -12.3977,
        7, -16.4844,
        8, -21.196,
        9, -26.5324,
        10, -32.4937,
        11, -39.0799,
        12, -46.291,
        13, -54.1269,
        14, -62.5877,
        15, -71.6734,
        16, -81.384,
        17, -91.7194,
        18, -102.68,
        19, -114.265,
        20, -126.475,
        21, -1.9999,
        22, -2.22174,
        23, -2.43733,
        24, -2.64668,
        25, -2.84977,
        26, -3.04662,
        27, -3.23721,
        28, -3.42156,
        29, -3.59966,
        30, -3.77151,
        31, -3.93711,
        32, -4.09647,
        33, -4.24957,
        34, -4.39643,
        35, -4.53703,
        36, -4.67139,
        37, -4.7995,
        38, -4.92136,
        39, -5.03697,
        40, -5.14634,
        41, -5.24945
      ]
    },
    {
      action => 1,
      numEntries => 43,
      entries => [
        0, 0,
        1, 0,
        2, 0,
        3, 0,
        4, 0,
        5, 0,
        6, 0,
        7, 0,
        8, 0,
        9, 0,
        10, 0,
        11, 0,
        12, 0,
        13, 0,
        14, 0,
        15, 0,
        16, 0,
        17, 0,
        18, 0,
        19, 0,
        20, 0,
        21, -5,
        22, -5,
        23, -5,
        24, -5,
        25, -5,
        26, -5,
        27, -5,
        28, -5,
        29, -5,
        30, -5,
        31, -5,
        32, -5,
        33, -5,
        34, -5,
        35, -5,
        36, -5,
        37, -5,
        38, -5,
        39, -5,
        40, -5,
        41, -5,
        42, 0
      ]
    }
  ]
}
