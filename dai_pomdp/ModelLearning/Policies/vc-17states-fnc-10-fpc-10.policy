# This file is a POMDP policy, represented as a set of "lower bound
# planes", each of which consists of an alpha vector and a corresponding
# action.  Given a particular belief b, this information can be used to
# answer two queries of interest:
#
#   1. What is a lower bound on the expected long-term reward starting
#        from belief b?
#   2. What is an action that achieves that expected reward lower bound?
#
# Each lower bound plane is only defined over a subset of the belief
# simplex--it is defined for those beliefs b such that the non-zero
# entries of b are a subset of the entries present in the plane's alpha
# vector.  If this condition holds we say the plane is 'applicable' to b.
#
# Given a belief b, both of the queries above can be answered by the
# following process: first, throw out all the planes that are not
# applicable to b.  Then, for each of the remaining planes, take the inner
# product of the plane's alpha vector with b.  The highest inner product
# value is the expected long-term reward lower bound, and the action label
# for that plane is the action that achieves the bound.

{
  policyType => "MaxPlanesLowerBound",
  numPlanes => 6,
  planes => [
    {
      action => 1,
      numEntries => 17,
      entries => [
        0, 0,
        1, 0,
        2, 0,
        3, 0,
        4, 0,
        5, 0,
        6, 0,
        7, 0,
        8, -10,
        9, -10,
        10, -10,
        11, -10,
        12, -10,
        13, -10,
        14, -10,
        15, -10,
        16, 0
      ]
    },
    {
      action => 2,
      numEntries => 17,
      entries => [
        0, -10,
        1, -10,
        2, -10,
        3, -10,
        4, -10,
        5, -10,
        6, -10,
        7, -10,
        8, 0,
        9, 0,
        10, 0,
        11, 0,
        12, 0,
        13, 0,
        14, 0,
        15, 0,
        16, 0
      ]
    },
    {
      action => 0,
      numEntries => 14,
      entries => [
        1, -1.74992,
        2, -2.49985,
        3, -3.24978,
        4, -3.9997,
        5, -4.74962,
        6, -5.49955,
        7, -5.9995,
        9, -1.74992,
        10, -2.49985,
        11, -3.24978,
        12, -3.9997,
        13, -4.74962,
        14, -5.49955,
        15, -5.9995
      ]
    },
    {
      action => 2,
      numEntries => 15,
      entries => [
        1, -10,
        2, -10,
        3, -10,
        4, -10,
        5, -10,
        6, -10,
        7, -10,
        8, 0,
        9, 0,
        10, 0,
        11, 0,
        12, 0,
        13, 0,
        14, 0,
        15, 0
      ]
    },
    {
      action => 1,
      numEntries => 15,
      entries => [
        0, 0,
        1, 0,
        2, 0,
        3, 0,
        4, 0,
        5, 0,
        6, 0,
        7, 0,
        9, -10,
        10, -10,
        11, -10,
        12, -10,
        13, -10,
        14, -10,
        15, -10
      ]
    },
    {
      action => 0,
      numEntries => 17,
      entries => [
        0, -1,
        1, -1.74992,
        2, -2.49985,
        3, -3.24978,
        4, -3.9997,
        5, -4.74962,
        6, -5.49955,
        7, -5.9995,
        8, -1,
        9, -1.74992,
        10, -2.49985,
        11, -3.24978,
        12, -3.9997,
        13, -4.74962,
        14, -5.49955,
        15, -5.9995,
        16, 0
      ]
    }
  ]
}
