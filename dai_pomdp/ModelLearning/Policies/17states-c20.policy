# This file is a POMDP policy, represented as a set of "lower bound
# planes", each of which consists of an alpha vector and a corresponding
# action.  Given a particular belief b, this information can be used to
# answer two queries of interest:
#
#   1. What is a lower bound on the expected long-term reward starting
#        from belief b?
#   2. What is an action that achieves that expected reward lower bound?
#
# Each lower bound plane is only defined over a subset of the belief
# simplex--it is defined for those beliefs b such that the non-zero
# entries of b are a subset of the entries present in the plane's alpha
# vector.  If this condition holds we say the plane is 'applicable' to b.
#
# Given a belief b, both of the queries above can be answered by the
# following process: first, throw out all the planes that are not
# applicable to b.  Then, for each of the remaining planes, take the inner
# product of the plane's alpha vector with b.  The highest inner product
# value is the expected long-term reward lower bound, and the action label
# for that plane is the action that achieves the bound.

{
  policyType => "MaxPlanesLowerBound",
  numPlanes => 6,
  planes => [
    {
      action => 1,
      numEntries => 17,
      entries => [
        0, 0,
        1, 0,
        2, 0,
        3, 0,
        4, 0,
        5, 0,
        6, 0,
        7, 0,
        8, -20,
        9, -20,
        10, -20,
        11, -20,
        12, -20,
        13, -20,
        14, -20,
        15, -20,
        16, 0
      ]
    },
    {
      action => 2,
      numEntries => 17,
      entries => [
        0, -20,
        1, -20,
        2, -20,
        3, -20,
        4, -20,
        5, -20,
        6, -20,
        7, -20,
        8, 0,
        9, 0,
        10, 0,
        11, 0,
        12, 0,
        13, 0,
        14, 0,
        15, 0,
        16, 0
      ]
    },
    {
      action => 0,
      numEntries => 14,
      entries => [
        1, -2.49985,
        2, -3.9997,
        3, -5.49955,
        4, -6.9994,
        5, -8.49925,
        6, -9.9991,
        7, -10.999,
        9, -2.49985,
        10, -3.9997,
        11, -5.49955,
        12, -6.9994,
        13, -8.49925,
        14, -9.9991,
        15, -10.999
      ]
    },
    {
      action => 1,
      numEntries => 15,
      entries => [
        0, 0,
        1, 0,
        2, 0,
        3, 0,
        4, 0,
        5, 0,
        6, 0,
        7, 0,
        9, -20,
        10, -20,
        11, -20,
        12, -20,
        13, -20,
        14, -20,
        15, -20
      ]
    },
    {
      action => 2,
      numEntries => 15,
      entries => [
        1, -20,
        2, -20,
        3, -20,
        4, -20,
        5, -20,
        6, -20,
        7, -20,
        8, 0,
        9, 0,
        10, 0,
        11, 0,
        12, 0,
        13, 0,
        14, 0,
        15, 0
      ]
    },
    {
      action => 0,
      numEntries => 17,
      entries => [
        0, -1,
        1, -2.49985,
        2, -3.9997,
        3, -5.49955,
        4, -6.9994,
        5, -8.49925,
        6, -9.9991,
        7, -10.999,
        8, -1,
        9, -2.49985,
        10, -3.9997,
        11, -5.49955,
        12, -6.9994,
        13, -8.49925,
        14, -9.9991,
        15, -10.999,
        16, 0
      ]
    }
  ]
}
